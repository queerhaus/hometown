name: Run Tests for Every Commit
on:
  push: {}
jobs:
  yarn-test:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install test dependencies
      run: |-
        yarn install --frozen-lockfile
        npx browserslist@latest --update-db
    - name: Run yarn tests
      run: yarn test:jest
  ruby-tests:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        # tmpfs makes DB faster by using RAM
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    env:
      BUNDLE_CLEAN: 'true'
      BUNDLE_DEPLOYMENT: 'true'
      BUNDLE_WITH: 'pam_authentication'
      BUNDLE_WITHOUT: 'development production'
      BUNDLE_FROZEN: 'true'
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: postgres
      RAILS_ENV: test
      ALLOW_NOPAM: true
      CONTINUOUS_INTEGRATION: true
      DISABLE_SIMPLECOV: true
      # PAM_ENABLED: true
      # PAM_DEFAULT_SERVICE: pam_test
      # PAM_CONTROLLED_SERVICE: pam_test_controlled
      REDIS_HOST: localhost
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt-get install -y ffmpeg libicu-dev libidn11-dev libprotobuf-dev protobuf-compiler
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Install Yarn deps
      run: bin/rake yarn:install
    - uses: actions/cache@v2
      with:
        path: public/assets
        key: ${{ runner.os }}-assets-${{ hashFiles('app/javascript') }}
        restore-keys: |
          ${{ runner.os }}-assets-
    - name: Precompile assets
      run: bin/rake assets:precompile
    - name: Prepare database
      run: bin/rake parallel:setup
    - name: Run tests
      run: bin/rake parallel:spec
